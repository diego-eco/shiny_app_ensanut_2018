View(datos)
datos2 <- data.frame(matrix(0, nrow = 100, ncol = 7))
colnames(datos2) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
datos2$Periodo <- 1:100
# Parámetros
k = 9
y = k^(0.5)
s = 0.7
c = y - s*y
inv = s*y
delta = 0.1
depre = delta*k
cambiok = s*y - delta*k
# Los ponemos como 1a observación
datos2$k[1] = k
datos2$y[1] = y
datos2$c[1] = c
datos2$inv[1] = inv
datos2$dk[1] = depre
datos2$Dk[1] = cambiok
for (j in 2:100) {
datos2$k[j] <- datos2$k[j-1] + datos2$Dk[j-1]
datos2$y[j] <- datos2$k[j]^(0.5)
datos2$c[j] <- datos2$y[j]*(1-s)
datos2$inv[j] <- s*datos2$y[j]
datos2$dk[j] <- delta*datos2$k[j]
datos2$Dk[j] <- datos2$inv[j] - delta*datos2$k[j]
}
runApp('Desktop/Code/R Pro/Shiny/test_solow')
View(datos2)
runApp('Desktop/Code/R Pro/Shiny/test_solow')
solow_matriz1 <- function(k_0=4, s=0.3, alpha=0.5, delta=0.1, n=100) {
dfs <- data.frame(matrix(0, nrow = n, ncol = 7))
colnames(dfs) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
dfs$Periodo <- 1:n
# Parámetros
y = k_0^(0.5)
c = y - s*y
inv = s*y
depre = delta*k_0
cambiok = s*y - delta*k_0
# Los ponemos como 1a observación
dfs$k[1] = k_0
dfs$y[1] = y
dfs$c[1] = c
dfs$inv[1] = inv
dfs$dk[1] = depre
dfs$Dk[1] = cambiok
# Iteramos
for (j in 2:n) {
dfs$k[j] <- dfs$k[j-1] + dfs$Dk[j-1]
dfs$y[j] <- dfs$k[j]^(0.5)
dfs$c[j] <- dfs$y[j]*(1-s)
dfs$inv[j] <- s*dfs$y[j]
dfs$dk[j] <- delta*dfs$k[j]
dfs$Dk[j] <- dfs$inv[j] - delta*dfs$k[j]
}
# Imprimir la base creada
dfs
}
solow_matriz1(k_0 = 25, s = .5)
x <- solow_matriz1(k_0 = 25, s = .5)
y <- solow_matriz1(k_0 = 25, s = .7)
z <- rbind.data.frame(x[1:10,], y)
z$Periodo[1:110] <- 1:110
ggplot() +
geom_line(aes(Periodo, c, col="s=0.7"), data = z) +
geom_hline(yintercept = 2.5, linetype =2) +
theme_classic()
x <- solow_matriz1(k_0 = 25, s = .5)
y <- solow_matriz1(k_0 = 25, s = .7)
z <- rbind.data.frame(x[1:10,], y)
z$Periodo[1:110] <- 1:110
ggplot() +
geom_line(aes(Periodo, c, col="s=0.7"), data = z) +
geom_hline(yintercept = 2.5, linetype =2) +
theme_classic()
xx <- solow_matriz1(k_0 = 9, s = .3)
yy <- solow_matriz1(k_0 = 9, s = .45)
zz <- rbind.data.frame(xx[1:10,], yy)
zz$Periodo[1:110] <- 1:110
zz %>% ggplot(aes(Periodo)) +
geom_line(aes(y=c, col="Consumo")) +
geom_line(aes(y=inv, col="Inversión")) +
geom_line(aes(y=y, col="Producción")) +
geom_hline(yintercept = 2.1, linetype = 2) +
geom_vline(xintercept = 10, linetype = 2) +
theme_classic()
solow_matriz2 <- function(k_0=4, s=0.3, alpha=0.5, A=1,
delta=0.1, n=0, g=0, obs=100) {
dfs <- data.frame(matrix(0, nrow = obs, ncol = 7))
colnames(dfs) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
dfs$Periodo <- 1:obs
# Parámetros
y = k_0^(0.5)
c = y - s*y
inv = s*y
depre = delta*k_0
cambiok = s*y - (delta+n+g)*k_0
# Los ponemos como 1a observación
dfs$k[1] = k_0
dfs$y[1] = y
dfs$c[1] = c
dfs$inv[1] = inv
dfs$dk[1] = depre
dfs$Dk[1] = cambiok
# Iteramos
for (j in 2:obs) {
dfs$k[j] <- dfs$k[j-1] + dfs$Dk[j-1]
dfs$y[j] <- dfs$k[j]^(0.5)
dfs$c[j] <- dfs$y[j]*(1-s)
dfs$inv[j] <- s*dfs$y[j]
dfs$dk[j] <- delta*dfs$k[j]
dfs$Dk[j] <- dfs$inv[j] - (delta+n+g)*dfs$k[j]
}
# Imprimir la base creada
dfs
}
x <- solow_matriz2(k_0 = 4, s = 0.3, alpha = .5, A = 1,
delta = 0.1, n = 0, g = 0, obs = 100)
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_1')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_1')
library(shiny)
shiny::runGitHub('username/repo_name')
library(shiny)
shiny::runGitHub("diego-eco.github.io","diego-eco", subdir = "inst/shiny/")
library(shiny)
> shiny::runGitHub("diego-eco.github.io","diego-eco", subdir = "diego-eco.github.io/shiny/test_1/")
shiny::runGitHub("diego-eco.github.io","diego-eco", subdir = "diego-eco.github.io/shiny/test_1/")
shiny::runGitHub('diego-eco/diego-eco.github.io/shiny/test_1')
shiny::runGitHub('diego-eco/shiny_solow')
shiny::runApp('Desktop/Code/R Pro/Shiny/test_maps/census-app')
shiny::runGitHub("diego-eco/shiny_ensanut2018_rojoneon")
shiny::runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp()
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/test_1')
runApp()
runApp('Desktop/Code/R Pro/Shiny/test_1')
runApp('Desktop/Code/R Pro/Shiny/test_1')
runApp('Desktop/Code/R Pro/Shiny/test_1')
runApp('Desktop/Code/R Pro/Shiny/test_1')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/test_solow')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
shinyUI(fluidPage(
title = 'MathJax Examples with in-line equations',
withMathJax(),
# section below allows in-line LaTeX via $ in mathjax.
tags$div(HTML("%MINIFYHTML054f426a811d8dc6994185318a8b98c69%
%MINIFYHTML054f426a811d8dc6994185318a8b98c610%")),
helpText('An irrational number $\sqrt{2}$
and a fraction $1-\frac{1}{2}$'),
helpText('and a fact about $\pi$:$\frac2\pi = \frac{\sqrt2}2 \cdot
\frac{\sqrt{2+\sqrt2}}2 \cdot
\frac{\sqrt{2+\sqrt{2+\sqrt2}}}2 \cdots$'),
uiOutput('ex1'),
uiOutput('ex2'),
uiOutput('ex3'),
uiOutput('ex4'),
checkboxInput('ex5_visible', 'Show Example 5', FALSE),
uiOutput('ex5')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
shiny::runGitHub("diego-eco/shiny_app_ensut")
# Datos de ensanut a nivel municipal
ensanut_ap <- read.csv(file = "https://raw.githubusercontent.com/diego-eco/shiny_app_ensut/master/data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
runApp('Desktop/Code/R Pro/Shiny/shiny_ensanut')
#Shape Municipal
mun_nac <- st_read("https://raw.githubusercontent.com/diego-eco/shiny_app_ensut/master/data/municipal.shp")
shiny::runGitHub("diego-eco/shiny_app_ensut")
shiny::runGitHub("diego-eco/shiny_app_ensut")
runApp('Documents/GitHub/shiny_app_ensut')
knitr::opts_chunk$set(echo = TRUE)
#Directorio de trabajo
setwd("~/Desktop/Code/R Pro/Shiny")
# Configuración
rm(list = ls())
# Paqueterías
pacman::p_load(tidyverse,
ggplot2,
shiny,
gmodels,
tmap,
leaflet,
foreign,
expss,
fishualize,
viridis,
raster,
cowplot)
#Paqueterías para mapear
library(sf)
#install.packages("ggspatial")
library("ggspatial")
theme_set(theme_bw())
library("colorspace")
# hcl_palettes(plot = TRUE)
# sessionInfo()
#Shape Nacional
nac <- st_read("~/Desktop/Code/R Pro/Shiny/shiny_ensanut/data/nacional.shp")
#Shape Municipal
mun_nac <- st_read("~/Desktop/Code/R Pro/Shiny/shiny_ensanut/data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
glimpse(mun_nac)
ensanut_ap <- read.csv(file = "https://raw.githubusercontent.com/diego-eco/shiny_app_ensut/master/data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
ensanut_ap <- ensanut_ap %>%
dplyr::rename(CVEGEO = mun)
glimpse(ensanut_ap)
#Unir ambas bases
datitos<-merge(x=mun_nac,y=ensanut_ap,by=c("CVEGEO"))
glimpse(datitos)
#Función para determinar theme de las gráficas
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(family = "Verdana",
color = "#939486"),
# remove all axes
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
# add a subtle grid
panel.grid.major = element_line(color = "#F5F5F3", size = 0.2),
panel.grid.minor = element_blank(),
# background colors
plot.background = element_rect(fill = "#F5F5F3",
color = NA),
panel.background = element_rect(fill = "#F5F5F3",
color = NA),
legend.background = element_rect(fill = "#F5F5F3",
color = NA),
# borders and margins
plot.margin = unit(c(.5, .5, .2, .5), "cm"),
panel.border = element_blank(),
panel.spacing = unit(c(-.1, 0.2, .2, 0.2), "cm"),
# titles
legend.title = element_text(size = 11),
legend.text = element_text(size = 9,hjust = 1,
color = "#939486"),
plot.title = element_text(size = 15, hjust = 0.5,
color = "#4B4C47"),
plot.subtitle = element_text(size = 10, hjust = 0.5,
color = "#939486",
margin = margin(b = -0.1,
t = -0.1,
l = 2,
unit = "cm"),
debug = F),
# captions
plot.caption = element_text(size = 7,
hjust = .5,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
...
)
}
# ¿Cuántas clases quiero?
no_classes <- 5
# Extraer cuantiles
cuantil <- datitos %>%
pull(diabetes) %>%
quantile(probs = seq(0, 1, length.out = no_classes + 1)) %>%
as.vector() # to remove names of quantiles, so idx below is numeric
# Así se crean las etiquetas
labels <- imap_chr(cuantil, function(., idx){
return(paste0(round(cuantil[idx] , 0),
"%",
" – ",
round(cuantil[idx + 1] , 0),
"%"))
})
cuantil
labels
runApp('Documents/GitHub/shiny_app_ensut')
runApp('Documents/GitHub/shiny_app_ensut')
shiny::runApp('Documents/GitHub/shiny_app_ensut')
shiny::runGitHub("diego-eco/shiny_app_ensut")
shiny::runGitHub("diego-eco/shiny_app_ensut")
shiny::runGitHub("diego-eco/shiny_ensanut2018_rojoneon")
shiny::runGitHub("diego-eco/shiny_app_ensut")
shiny::runGitHub("diego-eco/shiny_ensanut2018_rojoneon")
shiny::runGitHub("diego-eco/shiny_app_ensut")
shiny::runGitHub("diego-eco/shiny_ensanut2018_rojoneon")
shiny::runGitHub("diego-eco/shiny_app_ensut")
shiny::runGitHub("diego-eco/shiny_ensanut2018_rojoneon")
knitr::opts_chunk$set(echo = TRUE)
#Shape Municipal
mun_nac <- st_read("~/Documents/GitHub/shiny_app_ensut/data/municipal.shp")
knitr::opts_chunk$set(echo = TRUE)
#Directorio de trabajo
setwd("~/Desktop/Code/R Pro/Shiny")
# Configuración
rm(list = ls())
# Paqueterías
pacman::p_load(tidyverse,
ggplot2,
shiny,
gmodels,
tmap,
leaflet,
foreign,
expss,
fishualize,
viridis,
raster,
cowplot)
#Paqueterías para mapear
library(sf)
#install.packages("ggspatial")
library("ggspatial")
theme_set(theme_bw())
library("colorspace")
# hcl_palettes(plot = TRUE)
# sessionInfo()
# Shape Nacional
# nac <- st_read("~/Desktop/Code/R Pro/Shiny/shiny_ensanut/data/nacional.shp")
#Shape Municipal
mun_nac <- st_read("~/Documents/GitHub/shiny_app_ensut/data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO)
glimpse(mun_nac)
ensanut_ap <- read.csv(file = "https://raw.githubusercontent.com/diego-eco/shiny_app_ensut/master/data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
#ensanut_ap <- ensanut_ap %>%
#  dplyr::rename(CVEGEO = mun)
ensanut_ap <- ensanut_ap %>%
dplyr::select(CVEGEO)
glimpse(ensanut_ap)
glimpse(ensanut_ap)
#Unir ambas bases
datos <- dplyr::inner_join(mun_nac, ensanut_ap, by = "CVEGEO")
glimpse(datos)
#Unir ambas bases
datos <- mun_nac$CVEGEO - ensanut_ap$CVEGEO
ensanut_ap <- read.csv(file = "https://raw.githubusercontent.com/diego-eco/shiny_app_ensut/master/data/ensanut_areas_peq.csv",
sep=",",
colClasses=c('numeric',rep('factor', 6), 'numeric','numeric','numeric')
)
#ensanut_ap <- ensanut_ap %>%
#  dplyr::rename(CVEGEO = mun)
ensanut_ap <- ensanut_ap %>%
dplyr::select(CVEGEO)
glimpse(ensanut_ap)
glimpse(ensanut_ap)
#Unir ambas bases
datos <- mun_nac$CVEGEO - as.numeric(ensanut_ap$CVEGEO)
#Unir ambas bases
datos <- mun_nac$CVEGEO - as.numeric(ensanut_ap$CVEGEO)
#Unir ambas bases
datos <- mun_nac$CVEGEO - as.numeric(as.character(ensanut_ap$CVEGEO))
knitr::opts_chunk$set(echo = TRUE)
#Shape Municipal
mun_nac <- st_read("~/Documents/GitHub/shiny_app_ensut/data/municipal.shp")
knitr::opts_chunk$set(echo = TRUE)
#Directorio de trabajo
setwd("~/Desktop/Code/R Pro/Shiny")
# Configuración
rm(list = ls())
# Paqueterías
pacman::p_load(tidyverse,
ggplot2,
shiny,
gmodels,
tmap,
leaflet,
foreign,
expss,
fishualize,
viridis,
raster,
cowplot)
#Paqueterías para mapear
library(sf)
#install.packages("ggspatial")
library("ggspatial")
theme_set(theme_bw())
library("colorspace")
# hcl_palettes(plot = TRUE)
# sessionInfo()
# Shape Nacional
# nac <- st_read("~/Desktop/Code/R Pro/Shiny/shiny_ensanut/data/nacional.shp")
#Shape Municipal
mun_nac <- st_read("~/Documents/GitHub/shiny_app_ensut/data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
glimpse(mun_nac)
ensanut_ap <- read.csv(file = "https://raw.githubusercontent.com/diego-eco/shiny_app_ensut/master/data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
#ensanut_ap <- ensanut_ap %>%
#  dplyr::rename(CVEGEO = mun)
glimpse(ensanut_ap)
head(ensanut_ap$CVEGEO)
head(mun_nac$CVEGEO)
tail(mun_nac$CVEGEO)
tail(ensanut_ap$CVEGEO)
View(ensanut_ap)
runApp('Documents/GitHub/shiny_ensanut2018_rojoneon')
shiny::runGitHub("diego-eco/shiny_ensanut2018_rojoneon")
shiny::runGitHub("diego-eco/shiny_app_ensut")
pacman::p_load(tidyverse,
ggplot2,
shiny,
viridis,
sf
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
#raster,
#cowplot
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
# Datos de ensanut a nivel municipal
ensanut_ap <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
ensanut_ap <- ensanut_ap %>%
rename(CVEGEO = mun,Obesidad=obesidad,Hipertension=hipertension,Diabetes=diabetes)
setwd("~/Documents/GitHub/shiny_app_ensut")
#### Global R frame
pacman::p_load(tidyverse,
ggplot2,
shiny,
viridis,
sf
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
#raster,
#cowplot
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
# Datos de ensanut a nivel municipal
ensanut_ap <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
ensanut_ap <- ensanut_ap %>%
rename(CVEGEO = mun,Obesidad=obesidad,Hipertension=hipertension,Diabetes=diabetes)
#Unir ambas bases
datos <- dplyr::left_join(x=mun_nac, y=ensanut_ap, by=c("CVEGEO"))
runApp()
shiny::runApp()
