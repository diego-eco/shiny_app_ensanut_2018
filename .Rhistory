dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
# Datos de ensanut a nivel municipal
ensanut_ap <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('character', 6), 'numeric','numeric','numeric')
)
#ensanut_ap <- ensanut_ap %>%
#    dplyr::rename(CVEGEO = mun,Obesidad=obesidad,Hipertension=hipertension,Diabetes=diabetes)
names(ensanut_ap) <- c("CVGEO","ent","ent_nom","mun_clave","mun_nom","estimador",
"Obesidad","Hipertension","Diabetes")
glimpse(mun_nac)
glimpse(ensanut_ap)
#Unir ambas bases
datos <- base::merge(mun_nac, ensanut_ap,by = "CVEGEO")
#Unir ambas bases
datos <- base::merge(mun_nac, ensanut_ap,by = c("CVEGEO"))
#Unir ambas bases
datos <- dplyr::left_join(mun_nac, ensanut_ap,by = c("CVEGEO"))
last_error()
rlang::last_error()
rlang::last_trace()
knitr::opts_chunk$set(echo = TRUE)
#Directorio de trabajo
setwd("~/Desktop/Code/R Pro/Shiny")
# Configuración
rm(list = ls())
# Paqueterías
pacman::p_load(tidyverse,
ggplot2,
shiny,
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
viridis,
#raster,
#cowplot
sf
#ggspatial,
#colorspace
)
#Paqueterías para mapear
#library(sf)
#install.packages("ggspatial")
#library("ggspatial")
#theme_set(theme_bw())
#library("colorspace")
# hcl_palettes(plot = TRUE)
# sessionInfo()
#Shape Municipal
mun_nac <- st_read("~/Documents/GitHub/shiny_app_ensut/data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
glimpse(mun_nac)
ensanut_ap <- read.csv(file = "https://raw.githubusercontent.com/diego-eco/shiny_app_ensut/master/data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
#ensanut_ap <- ensanut_ap %>%
#  dplyr::rename(CVEGEO = mun)
glimpse(ensanut_ap)
#Unir ambas bases
datos <- dplyr::left_join(mun_nac, ensanut_ap, by = "CVEGEO")
glimpse(datos)
names(ensanut_ap) <- c("CVGEO","ent","ent_nom","mun_clave","mun_nom","estimador",
"Obesidad","Hipertension","Diabetes")
#Unir ambas bases
datos <- dplyr::left_join(mun_nac, ensanut_ap,by = c("CVEGEO"))
pacman::p_load(tidyverse,
ggplot2,
shiny,
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
viridis,
#raster,
#cowplot
sf
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
# Datos de ensanut a nivel municipal
ensanut_ap <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
#ensanut_ap <- ensanut_ap %>%
#    dplyr::rename(CVEGEO = mun,Obesidad=obesidad,Hipertension=hipertension,Diabetes=diabetes)
#Unir ambas bases
datos <- dplyr::left_join(mun_nac, ensanut_ap,by = c("CVEGEO"))
#Unir ambas bases
datos <- dplyr::left_join(mun_nac, ensanut_ap,by = c("CVEGEO"))
pacman::p_load(tidyverse,
ggplot2,
shiny,
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
viridis,
#raster,
#cowplot
sf
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
# Datos de ensanut a nivel municipal
ensanut_ap <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
#ensanut_ap <- ensanut_ap %>%
#    dplyr::rename(CVEGEO = mun,Obesidad=obesidad,Hipertension=hipertension,Diabetes=diabetes)
#Unir ambas bases
datos <- dplyr::left_join(mun_nac, ensanut_ap,by = c("CVEGEO"))
runApp()
#Unir ambas bases
datos <- dplyr::left_join(mun_nac, ensanut_ap,by = c("CVEGEO"))
setwd("~/Documents/GitHub/shiny_app_ensut")
pacman::p_load(tidyverse,
ggplot2,
shiny,
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
viridis,
#raster,
#cowplot
sf
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
# Datos de ensanut a nivel municipal
ensanut_ap <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
#Unir ambas bases
datos <- dplyr::left_join(mun_nac, ensanut_ap,by = c("CVEGEO"))
datos <- merge(mun_nac, ensanut_ap,by = c("CVEGEO"))
shiny::runApp()
setwd("~/Documents/GitHub/shiny_app_ensut")
pacman::p_load(tidyverse,
ggplot2,
shiny,
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
viridis,
#raster,
#cowplot
sf
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
# Datos de ensanut a nivel municipal
ensanut_ap <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
datos <- merge(mun_nac, ensanut_ap,by = c("CVEGEO"))
datos <- merge(mun_nac, ensanut_ap,by = "CVEGEO")
# Datos de ensanut a nivel municipal
ensanut_ap_v <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
datos <- merge(mun_nac, ensanut_ap,by = "CVEGEO")
datos <- merge(mun_nac, ensanut_ap,by = "CVEGEO")
datos <- merge(mun_nac, ensanut_ap,by = "CVEGEO")
View(ensanut_ap)
datos <- merge(mun_nac, ensanut_ap_v,by = "CVEGEO")
pacman::p_load(tidyverse,
ggplot2,
shiny,
viridis,
sf
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
#raster,
#cowplot
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
# Datos de ensanut a nivel municipal
ensanut_ap_v <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
datos <- merge(mun_nac, ensanut_ap_v,by = "CVEGEO")
View(datos)
runApp()
setwd("~/Documents/GitHub/shiny_app_ensut")
runApp()
#Shape Municipal
mun_nac <- st_read("municipal.shp")
shiny::runApp()
#Shape Municipal
mun_nac <- st_read("municipal.shp")
setwd("~/Documents/GitHub/shiny_app_ensut")
#Shape Municipal
mun_nac <- st_read("municipal.shp")
pacman::p_load(tidyverse,
ggplot2,
shiny,
viridis,
sf
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
#raster,
#cowplot
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("municipal.shp")
#Shape Municipal
mun_nac <- st_read("municipal.shp")
pacman::p_load(tidyverse,
ggplot2,
shiny,
viridis,
sf
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
#raster,
#cowplot
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
ensanut_ap <- read.csv(file = "ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
pacman::p_load(tidyverse,
ggplot2,
shiny,
viridis,
sf
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
#raster,
#cowplot
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("municipal.shp")
knitr::opts_chunk$set(echo = TRUE)
#Directorio de trabajo
setwd("~/Desktop/Code/R Pro/Shiny")
# Configuración
rm(list = ls())
# Paqueterías
pacman::p_load(tidyverse,
ggplot2,
shiny,
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
viridis,
#raster,
#cowplot
sf
#ggspatial,
#colorspace
)
#Paqueterías para mapear
#library(sf)
#install.packages("ggspatial")
#library("ggspatial")
#theme_set(theme_bw())
#library("colorspace")
# hcl_palettes(plot = TRUE)
# sessionInfo()
#Shape Municipal
mun_nac <- st_read("~/Documents/GitHub/shiny_app_ensut/data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
glimpse(mun_nac)
ensanut_ap <- read.csv(file = "https://raw.githubusercontent.com/diego-eco/shiny_app_ensut/master/data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
#ensanut_ap <- ensanut_ap %>%
#  dplyr::rename(CVEGEO = mun)
glimpse(ensanut_ap)
#Unir ambas bases
datos <- dplyr::left_join(mun_nac, ensanut_ap, by = "CVEGEO")
glimpse(datos)
#Función para determinar theme de las gráficas
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(family = "Verdana",
color = "#939486"),
# remove all axes
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
# add a subtle grid
panel.grid.major = element_line(color = "#F5F5F3", size = 0.2),
panel.grid.minor = element_blank(),
# background colors
plot.background = element_rect(fill = "#F5F5F3",
color = NA),
panel.background = element_rect(fill = "#F5F5F3",
color = NA),
legend.background = element_rect(fill = "#F5F5F3",
color = NA),
# borders and margins
plot.margin = unit(c(.5, .5, .2, .5), "cm"),
panel.border = element_blank(),
panel.spacing = unit(c(-.1, 0.2, .2, 0.2), "cm"),
# titles
legend.title = element_text(size = 11),
legend.text = element_text(size = 9,hjust = 1,
color = "#939486"),
plot.title = element_text(size = 15, hjust = 0.5,
color = "#4B4C47"),
plot.subtitle = element_text(size = 10, hjust = 0.5,
color = "#939486",
margin = margin(b = -0.1,
t = -0.1,
l = 2,
unit = "cm"),
debug = F),
# captions
plot.caption = element_text(size = 7,
hjust = .5,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
...
)
}
# ¿Cuántas clases quiero?
no_classes <- 5
# Extraer cuantiles
cuantil <- datos %>%
pull(Diabetes) %>%
quantile(probs = seq(0, 1, length.out = no_classes + 1)) %>%
as.vector() # to remove names of quantiles, so idx below is numeric
# Así se crean las etiquetas
labels <- imap_chr(cuantil, function(., idx){
return(paste0(round(cuantil[idx] , 0),
"%",
" – ",
round(cuantil[idx + 1] , 0),
"%"))
})
cuantil
labels
# Se elimina la última etiqueta
# En caso contrario sería hasta NA
labels <- labels[1:length(labels) - 1]
labels
# Crear la variable en datos
datos <- datos %>%
mutate(q_Diabetes = cut(Diabetes,
breaks = cuantil,
labels = labels,
include.lowest = T))
# q_var = datos %>%
#                pull(variable)
# datos <- datos %>%
#  mutate(q_Diabetes = cut(q_var,
#                         breaks = cuantil,
#                         labels = labels,
#                         include.lowest = T))
ggplot(data = datos) +
# Agrego la capa principal
geom_sf(
mapping = aes(
fill = q_Diabetes
),
color = "white",
size = 0
) +
# Viridis color scale
scale_fill_viridis(
option = "plasma",
name = " ",
alpha = 0.8,
begin = 0.6,
end = 1,
discrete = T, # discrete classes
direction = -1, # oscuro es el más alto, claro/amarillo el más bajo
guide = guide_legend(
keyheight = unit(5, units = "mm"),
title.position = "top",
reverse = T # El valor más alto hasta arriba
)) +
# # Utilizar un borde más grueso para los municipios
# geom_sf(
#   data = datos,
#   fill = "transparent",
#   color = "white",
#   size = 0.5) +
# Agregar títulos
labs(x = NULL,
y = NULL,
title = "Prevalencia de diabetes en México",
subtitle = "% de población de 20 años y más con diagnóstico previo de Diabetes",
caption = "Fuente: Elaborado por @rojo_neon, con datos de INEGI/ENSANUT a nivel muncipal.",
fill = "%") +
# Hacer un pequeño zoom
#coord_sf(xlim = c(-99.35, -98.9), ylim = c(19.17,19.6), expand = FALSE) +
# Finalmente, agregar theme
theme_map()
#Guardar el mapa
# ggsave("Diabetes_Nac.png", width = 7)
shiny::runApp()
#Shape Municipal
mun_nac <- st_read("datos/municipal.shp")
runApp()
ensanut_ap <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
View(ensanut_ap)
ensanut_ap <- ensanut_ap %>%
rename(CVEGEO = mun,Obesidad=obesidad,Hipertension=hipertension,Diabetes=diabetes)
runApp()
pacman::p_load(tidyverse,
ggplot2,
shiny,
viridis,
sf
#gmodels,
#tmap,
#leaflet,
#foreign,
#expss,
#fishualize,
#raster,
#cowplot
#ggspatial,
#colorspace
)
#Shape Municipal
mun_nac <- st_read("data/municipal.shp")
mun_nac <- mun_nac %>%
dplyr::select(CVEGEO,NOM_ENT,NOM_MUN)
# Datos de ensanut a nivel municipal
ensanut_ap <- read.csv(file = "data/ensanut_areas_peq.csv",
sep=",",
colClasses=c(rep('factor', 6), 'numeric','numeric','numeric')
)
ensanut_ap <- ensanut_ap %>%
rename(CVEGEO = mun,Obesidad=obesidad,Hipertension=hipertension,Diabetes=diabetes)
#Unir ambas bases
datos <- dplyr::left_join(x=mun_nac, y=ensanut_ap, by=c("CVEGEO"))
runApp()
